//
//  main.cpp
//  intbreak
//
//  Created by 黄 美强 on 14-4-1.
//  Copyright (c) 2014年 黄 美强. All rights reserved.
//
#include <iostream>
#include <vector>
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#define MAXLEN 200 //设置数的最大长度
using namespace std;

typedef vector <int> V;
typedef vector <V> VECTORLIST;

V intbreak(int);

int main(int argc, const char * argv[])
{
    printf("please input your number\n");
	int count = 0;
    bool result1 = false;
    while(!result1)
    {
        if(!(cin>>count)){
            cerr << "Wrong input! please reinput your clusters!\n";
            cin.clear();
            cin.ignore();
        }else{
            if(count <= 0){
                cerr << "Input must greater than 0! please reinput your clusters!\n";
                cin.clear();
                cin.ignore();
            }
            else
                result1 = true;
        }
    }
    
    int result[2*MAXLEN+10];
    char str1[MAXLEN+10],str2[MAXLEN+10];
    
    /*
    long result = 1;
    int i = 1;
    while (i <= count) {
        result *= i;
        i++;
    }
    cout<<"\nyour result is "<<result<<endl;
    */
    string tem = to_string(count);
    int j = 0;
    for (int i = int(tem.length()); i>0; i--) {
        str1[j++] = tem[i];
    }
    
    result[0] = 1;
    
    int k =1;
    while(k <= count){
        
        string tem = to_string(k);
        int j = 0;
        for (int i = int(tem.length()); i>0; i--) {
            str1[j++] = tem[i];
        }
        
        multiply(&result, &str1, &result);
        k++;
    }
    
    VECTORLIST vlist;
    V temp;
    for (int i = 2; i <= count; i++) {
        temp = intbreak(i);
        vlist.push_back(temp);
        temp.clear();
    }
    
    VECTORLIST::iterator it;
    V::iterator it1;
    int count2 = 0;
    int count5 = 0;
    for (it = vlist.begin(); it != vlist.end(); it++) {
        for (it1 = it->begin(); it1 != it->end(); it1++) {
            if (*it1 == 2) {
                count2++;
            }
            if (*it1 == 5) {
                count5++;
            }
        }
    }
    cout<<"there are "<<(count2>=count5?count5:count2)<<" 0s"<<endl;
    
}

V intbreak(int t){
    V temp;
 	int base = 2;
	do
	{
		while(t%base==0)
		{
            t=t/base;
            temp.push_back(base);
		}
        base++;
	}
    while(t!=1);
    return temp;
}

void multiply(char *str1[MAXLEN+10], char *str2[MAXLEN+10],int *c[2*MAXLEN+10]){
    
	int a[MAXLEN+10],b[MAXLEN+10],len1,len2,i,j;
	for(i=0;i<MAXLEN+10;i++)
		a[i]=b[i]=0;//将a,b两个数组都置为零
	for(i=0;i<2*MAXLEN+10;i++)
		c[i]=0;//将c置为零
	
	//gets(str1);
	//gets(str2);
    
	len1=strlen(*str1);
	len2=strlen(*str2);
	
	for(i=len1-1,j=0;i>=0;i--){//将字符型数转换成数字，低位存在数组的低位(倒置)
		a[j++]=*str1[i]-'0';//字符型减去'0'的ASCIII码值转换为数字
	}
	for(i=len2-1,j=0;i>=0;i--){
		b[j++]=*str2[i]-'0';//同上
	}
	for(i=0;i<len2;i++){//循环相乘，用第二个数的每一位去乘以第一个数，a的第i位乘以b的第j位之后存在c的第i+j位上
		for(j=0;j<len1;j++){
			*c[i+j]+=b[i]*a[j];
		}
	}
    for(i=0;i<len1+len2+2;i++){//处理进位问题，如果大于10，则进位
        if(*c[i]>=10){
            *c[i+1]+=*c[i]/10;
            *c[i]%=10;
        }
    }
	for(i=len1+len2+2;(c[i]==0)&&(i>=0);i--);//过滤掉高位的数字零，使之不输出
	if(i>=0)
		for(;i>=0;i--)
			printf("%d",*c[i]);
	else
		printf("0");
	printf("\n");
}


